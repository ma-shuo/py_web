# Generated by Django 5.1.1 on 2024-10-09 09:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Enrollment_Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('enrollment_year', models.BigIntegerField(blank=True, null=True, verbose_name='入学年级')),
                ('enrollment_class_number', models.BigIntegerField(blank=True, null=True, verbose_name='班级')),
                ('school_id', models.BigIntegerField(blank=True, null=True, verbose_name='学校')),
                ('enrollment_class_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='班级别名')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'enrollment_class',
                'verbose_name_plural': 'enrollment_class',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('exam_type_id', models.BigIntegerField(blank=True, null=True, verbose_name='考试类型')),
                ('exam_time', models.DateField(blank=True, null=True, verbose_name='考试时间')),
                ('exam_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='考试名称')),
                ('enrollment_year', models.BigIntegerField(blank=True, null=True, verbose_name='入学年级')),
                ('grade_semester_id', models.BigIntegerField(blank=True, null=True, verbose_name='年级描述')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Exam',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Exam_Stage_Subject_Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('stage_subject_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='学段_科目关系id')),
                ('exam_id', models.BigIntegerField(blank=True, null=True, verbose_name='考试名称')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'exam_stage_subject_mapping',
                'verbose_name_plural': 'exam_stage_subject_mapping',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Exam_Subject_Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('student_enrollment_class_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='学生_班级关系id')),
                ('exam_stage_subject_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='考试_学段_科目关系id')),
                ('raw_score', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='原始分')),
                ('standard_score', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='标准分')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'exam_subject_score',
                'verbose_name_plural': 'exam_subject_score',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Exam_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('exam_type_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='考试类型')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'exam_type',
                'verbose_name_plural': 'exam_type',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Grade_Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('grade_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='名称')),
                ('semester_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='学期')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'grade_semester',
                'verbose_name_plural': 'grade_semester',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('school_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='学校')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'School',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='School_Stage_Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('school_id', models.BigIntegerField(blank=True, null=True, verbose_name='学校')),
                ('stage_id', models.BigIntegerField(blank=True, null=True, verbose_name='学段')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'school_stage_mapping',
                'verbose_name_plural': 'school_stage_mapping',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Sgp_Exam_Subject_Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('in_exam_stage_subject_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='入口考试科目')),
                ('out_exam_stage_subject_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='出口考试科目')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'sgp_exam_subject_mapping',
                'verbose_name_plural': 'sgp_exam_subject_mapping',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Sgp_Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('student_enrollment_class_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='sgp人员')),
                ('sgp_score', models.CharField(blank=True, max_length=255, null=True, verbose_name='sgp成绩')),
                ('sgp_exam_subject_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='sgp考试科目')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'sgp_score',
                'verbose_name_plural': 'sgp_score',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('stage_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='学段')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Stage',
                'verbose_name_plural': 'Stage',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Stage_Subject_Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('stage_id', models.BigIntegerField(blank=True, null=True, verbose_name='学段')),
                ('subject_id', models.BigIntegerField(blank=True, null=True, verbose_name='科目')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'stage_subject_mapping',
                'verbose_name_plural': 'stage_subject_mapping',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('student_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='姓名')),
                ('school_issued_student_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='学号')),
                ('provincial_issued_student_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='省学籍号')),
                ('national_issued_student_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='国家学籍号')),
                ('identity_card_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='身份证号')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Student',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Student_Enrollment_Class_Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('student_id', models.BigIntegerField(blank=True, null=True, verbose_name='学生')),
                ('enrollment_class_id', models.BigIntegerField(blank=True, null=True, verbose_name='班级')),
                ('grade_semester_id', models.BigIntegerField(blank=True, null=True, verbose_name='年级描述')),
                ('start_time', models.DateField(blank=True, null=True, verbose_name='开始时间')),
                ('end_time', models.DateField(blank=True, null=True, verbose_name='结束时间')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'student_enrollment_class_mapping',
                'verbose_name_plural': 'student_enrollment_class_mapping',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('subject_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='科目')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subject',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('teacher_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='教师姓名')),
                ('school_id', models.BigIntegerField(blank=True, null=True, verbose_name='学校')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teacher',
                'ordering': ('-created_time',),
            },
        ),
        migrations.CreateModel(
            name='Teacher_Subject_Enrollment_Class_Mapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created time')),
                ('updated_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated time')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('enrollment_class_id', models.BigIntegerField(blank=True, null=True, verbose_name='班级')),
                ('teacher_id', models.BigIntegerField(blank=True, null=True, verbose_name='教师')),
                ('stage_subject_mapping_id', models.BigIntegerField(blank=True, null=True, verbose_name='学段科目')),
                ('start_time', models.DateField(blank=True, null=True, verbose_name='开始时间')),
                ('end_time', models.DateField(blank=True, null=True, verbose_name='结束时间')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='creator_query', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('modifier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', related_query_name='modifier_query', to=settings.AUTH_USER_MODEL, verbose_name='Modifier')),
            ],
            options={
                'verbose_name': 'teacher_subject_enrollment_class_mapping',
                'verbose_name_plural': 'teacher_subject_enrollment_class_mapping',
                'ordering': ('-created_time',),
            },
        ),
    ]
